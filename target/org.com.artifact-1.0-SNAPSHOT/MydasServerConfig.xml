<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2007 Philip Jones, EMBL-European Bioinformatics Institute
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  ~
  ~
  ~ For further details of the mydas project, including source code,
  ~ downloads and documentation, please see:
  ~
  ~ http://code.google.com/p/mydas/
  ~
  -->

<mydasserver xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:noNamespaceSchemaLocation="http://mydas.googlecode.com/svn/trunk/mydas/server_core/src/main/resources/mydasserverconfig.xsd">
    <!-- The global element holds details of configuration common to the entire server. -->
    <global>

        <!-- The URL of the DAS server up to and including /das/ (e.g. http://www.ebi.ac.uk/das-srv/uniprot/das/)
        This should be the external URL.  (Allows correct access to the service through reverse-proxies etc.)-->
        <baseurl>${atlas.baseurl}/das</baseurl>

        <!-- A boolean switch indicating if the output from the DAS server should be compressed or not.

         Note that compression does not work with jetty, hence this is set to false here, but you are
         advised to set this to true for deploying your DAS source on a full featured web server. -->
        <gzipped>false</gzipped>

        <!-- If set to true, then if the browser points to /das or /das/ then
            the output of the dsn command should be displayed.  This is
            useful for creating a home page based upon the data source
            details.-->
        <slash-das-points-to-dsn>true</slash-das-points-to-dsn>

        <!-- The name of the default DAS stylesheet to be used for all of the defined datasources.
        This can be overridden for individual datasources by including a stylesheet element for them. -->
        <default-stylesheet>TEST.style</default-stylesheet>

        <!-- Gives the URI of an XSLT transformation that can be used by the browser
            to present the dsn command response in a human-readable format.
            Optional - the processing instruction will only be included if this
            element is present. -->
        <dsn-xslt-url>${atlas.baseurl}/xslt/dsn.xsl</dsn-xslt-url>

        <!-- NOTE - THE XSLTs LISTED BELOW (COMMENTED OUT) ARE UNDER DEVELOPMENT, SO NOT
        CURRENTLY AVAILABLE.  You can of course substitute your own XSLT and provide a link
        to it here. -->

        <!-- Gives the URI of an XSLT transformation that can be used by the browser
            to present the dna command response in a human-readable format.
            Optional - the processing instruction will only be included if this
            element is present. -->
        <!--<dna-xslt-url>/xslt/dna.xsl</dna-xslt-url>-->

        <!-- Gives the URI of an XSLT transformation that can be used by the browser
            to present the entry-points command response in a human-readable format.
            Optional - the processing instruction will only be included if this
            element is present.-->
        <!--<entry-points-xslt-url>/xslt/entry-point.xsl</entry-points-xslt-url>-->

        <!-- Gives the URI of an XSLT transformation that can be used by the browser
          to present the sequence command response in a human-readable format.
          Optional - the processing instruction will only be included if this
          element is present. -->
        <!--<sequence-xslt-url>/xslt/sequence.xsl</sequence-xslt-url>-->

        <!-- Gives the URI of an XSLT transformation that can be used by the browser
            to present the features command response in a human-readable format.
            Optional - the processing instruction will only be included if this
            element is present. -->
        <!--<features-xslt-url>/xslt/features.xsl</features-xslt-url>-->

        <!-- Gives the URI of an XSLT transformation that can be used by the browser
            to present the types command response in a human-readable format.
            Optional - the processing instruction will only be included if this
            element is present. -->
        <!--<types-xslt-url>/xslt/types.xsl</types-xslt-url>-->

        <!-- These global properties are made available to all the plugin classes
        through the DataSource interface, so the plugin author can
        add arbitrary additional configuration to their data source. -->
    </global>
    <!-- The enclosing element for one or more datasource definitions. -->
    <datasources>
        <!-- Configuration for a single data source. All the information annotated in this
        element will be available to the DataSource class.
        Attributes:
        id: This is the mandatory data source ID, as provided in the /DASDSN/DSN/SOURCE/@id attribute of the XML returned by the DAS dsn command.
        name: This is the mandatory data source name, as provided in the /DASDSN/DSN/SOURCE element of the XML returned by the DAS dsn command. It may or may not be same as the id.
        version: This is the optional data source version, as provided in the /DASDSN/DSN/SOURCE/@version attribute of the XML returned by the DAS dsn command.
        mapmaster: This is the mandatory data source version, as provided in the /DASDSN/DSN/MAPMASTER element of the XML returned by the DAS dsn command. For a reference server, this should echo its own URL.
        description: This is the optional data source description, as provided in the /DASDSN/DSN/DESCRIPTION element of the XML returned by the DAS dsn command. For a reference server, this should echo its own URL.
        description-href: This is the optional data source description href attribute, as provided in the /DASDSN/DSN/DESCRIPTION/@href attribute of the XML returned by the DAS dsn command. For a reference server, this should echo its own URL.
        -->
        <datasource id="gxa"
                    name="gxa"
                    version="0.1"
                    mapmaster="${atlas.baseurl}/das/gxa"
                    description="Gene eXxpression Atlas Annotation Data Source"
                    description-href="http://code.google.com/p/mydas/">
            <!-- The fully qualified class name of the DataSource. -->
            <class>ae3.service.GxaDasDataSource</class>

            <!-- The optional name of the DAS stylesheet to be used for this datasource.
            This will override the default stylesheet defined in the global settings section. -->
            <stylesheet>TEST.style</stylesheet>

            <!-- This setting indicates if the dna command is enabled or not for this data source.
            Clearly this may be set to false for servers that serve only protein sequence and
            annotation.  Note that the mydas DAS server makes no attempt to check that a
            valid DNA, RNA or protein sequence is being served by the sequence command - this
            is the responsibility of the data source itself. -->
            <dna-command-enabled>true</dna-command-enabled>

            <!-- If 'true' then when segment coordinates are included in the
            request, only features that are entirely enclosed within the coordinates are returned.
            If 'false' then all features that overlap with the coordinates are returned.  Handles an
            ambiguity in the DAS 1.53 specification - see section "Retrieve the Annotations Across a Segment". -->
            <features-strictly-enclosed>true</features-strictly-enclosed>

            <!-- If 'true' then if no feature label is provided by the data source, the feature id will
            automatically be reported as the feature label.  (Of course, if a feature label is
            provided, this will override the feature id.) -->
            <use-feature-id-for-feature-label>true</use-feature-id-for-feature-label>

            <!--
            If include-types-with-zero-count='true' then all of the types present in the data source
            will be listed by the types command even if they do not appear for the requested segment.
            If 'false', if the types command includes 'segment' arguments, only the feature types
            actually annotated on the requested segments will be listed.-->
            <include-types-with-zero-count>true</include-types-with-zero-count>

            <!-- These properties are made available to the plugin class
            through the DataSource interface, so the plugin author can
            add arbitrary additional configuration to their data source.-->
        </datasource>
    </datasources>
</mydasserver>

